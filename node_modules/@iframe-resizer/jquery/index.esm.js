/*!
 *  @preserve
 *  
 *  @module      iframe-resizer/jquery 5.3.1 (esm) - 2024-09-12
 *
 *  @license     GPL-3.0 for non-commercial use only.
 *               For commercial use, you must purchase a license from
 *               https://iframe-resizer.com/pricing
 * 
 *  @description Keep same and cross domain iFrames sized to their content 
 *
 *  @author      David J. Bradshaw <info@iframe-resizer.com>
 * 
 *  @see         {@link https://iframe-resizer.com}
 * 
 *  @copyright  (c) 2013 - 2024, David J. Bradshaw. All rights reserved.
 */


import connectResizer from '@iframe-resizer/core';

const msgId = '[iframe-resizer]';

function getMyID(iframeId) {
  if (window.top === window.self) {
    return `Parent page: ${iframeId}`
  }

  return window?.parentIFrame?.getId
    ? `${window.parentIFrame.getId()}: ${iframeId}`
    : `Nested parent page: ${iframeId}`
}

const formatLogHeader = (iframeId) => `${msgId}[${getMyID(iframeId)}]`;

const output = (type, iframeId, ...msg) =>
  // eslint-disable-next-line no-console
  window?.console[type](formatLogHeader(iframeId), ...msg);

const warn = (iframeId, ...msg) => output('warn', iframeId, ...msg);

switch (true) {
  case window.jQuery === undefined:
    warn('', 'Unable to bind to jQuery, it is not available.');
    break

  case !window.jQuery.fn:
    warn('', 'Unable to bind to jQuery, it is not fully loaded.');
    break

  case window.jQuery.fn.iframeResize:
    warn('', 'iframeResize is already assigned to jQuery.fn.');
    break

  default:
    window.jQuery.fn.iframeResize = function (options) {
      const connectWithOptions = connectResizer(options);
      const init = (i, el) => connectWithOptions(el);

      return this.filter('iframe').each(init).end()
    };

    window.jQuery.fn.iFrameResize = function (options) {
      warn(
        '',
        'Deprecated:  Use the iframeResize method instead of iFrameResize',
      );

      return this.iframeResize(options)
    };
}
